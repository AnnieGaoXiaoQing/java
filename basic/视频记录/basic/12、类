1、抽象方法和抽象类
   抽象方法：仅声明，没有方法体（就是告诉子类，必须要给抽象方法提供具体的实现）
   抽象类：包含抽象方法，通过abstract方法定义规范，然后要求子类必须定义具体实现。
   注：
      通过抽象类，我们可以做到严格限制子类的设计，使子类之间更加通用
   抽象类使用要点：
      a、有抽象方法的类只能定义成抽象类
      b、抽象类不能实例化，即不能用new来实例化抽象类
      c、抽象类可以保护属性、方法、构造方法。但是构造方法不能用来new，只能用来被子类调用
      d、抽象类只能用来被继承
      e、抽象方法必须被子类实现
   抽象类的意义：为子类提供统一的、规范的模板。子类必须实现相关的抽象方法
2、接口
   接口就是规范
   详细说明：
        访问修饰符：只能是public或者默认
        接口名：和类名采用相同命名机制
        extends：接口可以多继承
        常量：接口中属性只能是常量（总是被public static final 修饰，不写也是）
        方法：接口中的方法只能是：public abstrac（不写也是）
3、内部类
    成员内部类：包括静态和非静态内部类
    匿名内部类：
    局部内部类：很少用到
